{
  "router": {
    "middlewares": [
      {
        "pkg": "github.com/go-chi/chi/v5/middleware",
        "func": "Logger",
        "comment": "Logger is a middleware that logs the start and end of each request, along\nwith some useful data about what was requested, what the response status was,\nand how long it took to return. When standard output is a TTY, Logger will\nprint in color, otherwise it will print in black and white. Logger prints a\nrequest ID if one is provided.\n\nAlternatively, look at https://github.com/goware/httplog for a more in-depth\nhttp logger with structured logging support.\n\nIMPORTANT NOTE: Logger should go before any other middleware that may change\nthe response, such as middleware.Recoverer. Example:\n\n\tr := chi.NewRouter()\n\tr.Use(middleware.Logger)        // \u003c--\u003c\u003c Logger should come before Recoverer\n\tr.Use(middleware.Recoverer)\n\tr.Get(\"/\", handler)\n",
        "file": "/go/pkg/mod/github.com/go-chi/chi/v5@v5.1.0/middleware/logger.go",
        "line": 39
      },
      {
        "pkg": "github.com/",
        "func": "o-chi/cors.(*Cors).Handler-fm",
        "comment": "",
        "file": "\u003cautogenerated\u003e",
        "line": 1
      },
      {
        "pkg": "github.com/",
        "func": "66b/chi-prometheus.Middleware.handler-fm",
        "comment": "",
        "file": "\u003cautogenerated\u003e",
        "line": 1
      },
      {
        "pkg": "",
        "func": "github.com/pmatteo/chi-healthcheck-middleware.NewHealthChecker.func1",
        "comment": "",
        "file": "/go/pkg/mod/github.com/pmatteo/chi-healthcheck-middleware@v1.0.0/healthchecker.go",
        "line": 28,
        "anonymous": true
      }
    ],
    "routes": {
      "/metrics": {
        "handlers": {
          "*": {
            "middlewares": [],
            "method": "*",
            "pkg": "github.com/prometheus/client_golang/prometheus/promhttp",
            "func": "InstrumentHandlerCounter.func1",
            "comment": "",
            "file": "/go/pkg/mod/github.com/prometheus/client_golang@v1.20.5/prometheus/promhttp/instrument_server.go",
            "line": 145,
            "anonymous": true
          }
        }
      },
      "/reservations": {
        "handlers": {
          "POST": {
            "middlewares": [],
            "method": "POST",
            "pkg": "rso/m/paths",
            "func": "AddReservation",
            "comment": "AddReservation adds a new reservation.\n",
            "file": "/app/paths/reservations.go",
            "line": 89
          }
        }
      },
      "/reservations/month/{month}": {
        "handlers": {
          "GET": {
            "middlewares": [],
            "method": "GET",
            "pkg": "rso/m/paths",
            "func": "GetReservationsByMonth",
            "comment": "GetReservationsByMonth retrieves all reservations for a specific month.\n",
            "file": "/app/paths/reservations.go",
            "line": 40
          }
        }
      },
      "/reservations/user/{uuid}": {
        "handlers": {
          "GET": {
            "middlewares": [],
            "method": "GET",
            "pkg": "rso/m/paths",
            "func": "GetUserReservations",
            "comment": "GetUserReservations retrieves a user's reservations.\n",
            "file": "/app/paths/reservations.go",
            "line": 18
          }
        }
      },
      "/reservations/{id}": {
        "handlers": {
          "DELETE": {
            "middlewares": [],
            "method": "DELETE",
            "pkg": "rso/m/paths",
            "func": "DeleteReservation",
            "comment": "DeleteReservation deletes a specific reservation.\n",
            "file": "/app/paths/reservations.go",
            "line": 70
          }
        }
      },
      "/swagger/*": {
        "handlers": {
          "*": {
            "middlewares": [],
            "method": "*",
            "pkg": "github.com/go-chi/chi",
            "func": "v5.(*Mux).Mount.func1",
            "comment": "",
            "file": "/go/pkg/mod/github.com/go-chi/chi/v5@v5.1.0/mux.go",
            "line": 315,
            "anonymous": true,
            "unresolvable": true
          }
        }
      },
      "/users": {
        "handlers": {
          "GET": {
            "middlewares": [],
            "method": "GET",
            "pkg": "rso/m/paths",
            "func": "GetUsers",
            "comment": "SearchUsers searches users based on text input.\n",
            "file": "/app/paths/users.go",
            "line": 16
          }
        }
      },
      "/users/ban/{uuid}": {
        "handlers": {
          "POST": {
            "middlewares": [],
            "method": "POST",
            "pkg": "rso/m/paths",
            "func": "BanUser",
            "comment": "BanUser disables a user.\n",
            "file": "/app/paths/users.go",
            "line": 103
          }
        }
      },
      "/users/confirm/{uuid}": {
        "handlers": {
          "POST": {
            "middlewares": [],
            "method": "POST",
            "pkg": "rso/m/paths",
            "func": "ConfirmUser",
            "comment": "ConfirmUser updates a user's 'confirmed' status.\n",
            "file": "/app/paths/users.go",
            "line": 81
          }
        }
      },
      "/users/search": {
        "handlers": {
          "GET": {
            "middlewares": [],
            "method": "GET",
            "pkg": "rso/m/paths",
            "func": "SearchUsers",
            "comment": "SearchUsers searches users based on text input.\n",
            "file": "/app/paths/users.go",
            "line": 63
          }
        }
      },
      "/users/self": {
        "handlers": {
          "GET": {
            "middlewares": [],
            "method": "GET",
            "pkg": "rso/m/paths",
            "func": "GetSelf",
            "comment": "SearchUsers searches users based on text input.\n",
            "file": "/app/paths/users.go",
            "line": 29
          }
        }
      },
      "/users/{uuid}": {
        "handlers": {
          "GET": {
            "middlewares": [],
            "method": "GET",
            "pkg": "rso/m/paths",
            "func": "GetUser",
            "comment": "SearchUsers searches users based on text input.\n",
            "file": "/app/paths/users.go",
            "line": 42
          },
          "POST": {
            "middlewares": [],
            "method": "POST",
            "pkg": "rso/m/paths",
            "func": "EditUser",
            "comment": "EditUser updates a user's information.\n",
            "file": "/app/paths/users.go",
            "line": 123
          }
        }
      }
    }
  }
}